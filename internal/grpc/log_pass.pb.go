// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: log_pass.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Login     string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Pass      string                 `protobuf:"bytes,3,opt,name=pass,proto3" json:"pass,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Meta      []byte                 `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *LogPass) Reset() {
	*x = LogPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPass) ProtoMessage() {}

func (x *LogPass) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPass.ProtoReflect.Descriptor instead.
func (*LogPass) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{0}
}

func (x *LogPass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogPass) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *LogPass) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *LogPass) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *LogPass) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type InsertLogPassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	LogPass *LogPass `protobuf:"bytes,2,opt,name=log_pass,json=logPass,proto3" json:"log_pass,omitempty"`
}

func (x *InsertLogPassRequest) Reset() {
	*x = InsertLogPassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertLogPassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertLogPassRequest) ProtoMessage() {}

func (x *InsertLogPassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertLogPassRequest.ProtoReflect.Descriptor instead.
func (*InsertLogPassRequest) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{1}
}

func (x *InsertLogPassRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *InsertLogPassRequest) GetLogPass() *LogPass {
	if x != nil {
		return x.LogPass
	}
	return nil
}

type InsertLogPassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogPass *LogPass `protobuf:"bytes,1,opt,name=log_pass,json=logPass,proto3" json:"log_pass,omitempty"`
}

func (x *InsertLogPassResponse) Reset() {
	*x = InsertLogPassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertLogPassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertLogPassResponse) ProtoMessage() {}

func (x *InsertLogPassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertLogPassResponse.ProtoReflect.Descriptor instead.
func (*InsertLogPassResponse) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{2}
}

func (x *InsertLogPassResponse) GetLogPass() *LogPass {
	if x != nil {
		return x.LogPass
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{3}
}

func (x *GetRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLogPassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogPass *LogPass `protobuf:"bytes,1,opt,name=log_pass,json=logPass,proto3" json:"log_pass,omitempty"`
	Error   string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetLogPassResponse) Reset() {
	*x = GetLogPassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogPassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogPassResponse) ProtoMessage() {}

func (x *GetLogPassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogPassResponse.ProtoReflect.Descriptor instead.
func (*GetLogPassResponse) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{4}
}

func (x *GetLogPassResponse) GetLogPass() *LogPass {
	if x != nil {
		return x.LogPass
	}
	return nil
}

func (x *GetLogPassResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateLogPassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogPass *LogPass `protobuf:"bytes,3,opt,name=log_pass,json=logPass,proto3" json:"log_pass,omitempty"`
}

func (x *UpdateLogPassRequest) Reset() {
	*x = UpdateLogPassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLogPassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogPassRequest) ProtoMessage() {}

func (x *UpdateLogPassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogPassRequest.ProtoReflect.Descriptor instead.
func (*UpdateLogPassRequest) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLogPassRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateLogPassRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLogPassRequest) GetLogPass() *LogPass {
	if x != nil {
		return x.LogPass
	}
	return nil
}

type UpdateLogPassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogPass *LogPass `protobuf:"bytes,1,opt,name=log_pass,json=logPass,proto3" json:"log_pass,omitempty"`
	Error   string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateLogPassResponse) Reset() {
	*x = UpdateLogPassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLogPassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogPassResponse) ProtoMessage() {}

func (x *UpdateLogPassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogPassResponse.ProtoReflect.Descriptor instead.
func (*UpdateLogPassResponse) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLogPassResponse) GetLogPass() *LogPass {
	if x != nil {
		return x.LogPass
	}
	return nil
}

func (x *UpdateLogPassResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteLogPassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteLogPassRequest) Reset() {
	*x = DeleteLogPassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogPassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogPassRequest) ProtoMessage() {}

func (x *DeleteLogPassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogPassRequest.ProtoReflect.Descriptor instead.
func (*DeleteLogPassRequest) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteLogPassRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DeleteLogPassRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_pass_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_pass_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_log_pass_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_log_pass_proto protoreflect.FileDescriptor

var file_log_pass_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50,
	0x61, 0x73, 0x73, 0x22, 0x40, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x50, 0x61, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x50, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x72, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x22,
	0x56, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x49, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xf8, 0x01, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x50, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x50,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x73, 0x68, 0x61, 0x6e, 0x6b, 0x6f, 0x47, 0x4f, 0x2f, 0x47,
	0x6f, 0x70, 0x68, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_log_pass_proto_rawDescOnce sync.Once
	file_log_pass_proto_rawDescData = file_log_pass_proto_rawDesc
)

func file_log_pass_proto_rawDescGZIP() []byte {
	file_log_pass_proto_rawDescOnce.Do(func() {
		file_log_pass_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_pass_proto_rawDescData)
	})
	return file_log_pass_proto_rawDescData
}

var file_log_pass_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_log_pass_proto_goTypes = []interface{}{
	(*LogPass)(nil),               // 0: api.LogPass
	(*InsertLogPassRequest)(nil),  // 1: api.InsertLogPassRequest
	(*InsertLogPassResponse)(nil), // 2: api.InsertLogPassResponse
	(*GetRequest)(nil),            // 3: api.GetRequest
	(*GetLogPassResponse)(nil),    // 4: api.GetLogPassResponse
	(*UpdateLogPassRequest)(nil),  // 5: api.UpdateLogPassRequest
	(*UpdateLogPassResponse)(nil), // 6: api.UpdateLogPassResponse
	(*DeleteLogPassRequest)(nil),  // 7: api.DeleteLogPassRequest
	(*DeleteResponse)(nil),        // 8: api.DeleteResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*User)(nil),                  // 10: api.User
}
var file_log_pass_proto_depIdxs = []int32{
	9,  // 0: api.LogPass.updated_at:type_name -> google.protobuf.Timestamp
	10, // 1: api.InsertLogPassRequest.user:type_name -> api.User
	0,  // 2: api.InsertLogPassRequest.log_pass:type_name -> api.LogPass
	0,  // 3: api.InsertLogPassResponse.log_pass:type_name -> api.LogPass
	10, // 4: api.GetRequest.user:type_name -> api.User
	0,  // 5: api.GetLogPassResponse.log_pass:type_name -> api.LogPass
	10, // 6: api.UpdateLogPassRequest.user:type_name -> api.User
	0,  // 7: api.UpdateLogPassRequest.log_pass:type_name -> api.LogPass
	0,  // 8: api.UpdateLogPassResponse.log_pass:type_name -> api.LogPass
	10, // 9: api.DeleteLogPassRequest.user:type_name -> api.User
	1,  // 10: api.LogPasses.Insert:input_type -> api.InsertLogPassRequest
	3,  // 11: api.LogPasses.Get:input_type -> api.GetRequest
	5,  // 12: api.LogPasses.Update:input_type -> api.UpdateLogPassRequest
	7,  // 13: api.LogPasses.Delete:input_type -> api.DeleteLogPassRequest
	2,  // 14: api.LogPasses.Insert:output_type -> api.InsertLogPassResponse
	4,  // 15: api.LogPasses.Get:output_type -> api.GetLogPassResponse
	6,  // 16: api.LogPasses.Update:output_type -> api.UpdateLogPassResponse
	8,  // 17: api.LogPasses.Delete:output_type -> api.DeleteResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_log_pass_proto_init() }
func file_log_pass_proto_init() {
	if File_log_pass_proto != nil {
		return
	}
	file_registration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_log_pass_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertLogPassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertLogPassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogPassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLogPassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLogPassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogPassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_pass_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_pass_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_pass_proto_goTypes,
		DependencyIndexes: file_log_pass_proto_depIdxs,
		MessageInfos:      file_log_pass_proto_msgTypes,
	}.Build()
	File_log_pass_proto = out.File
	file_log_pass_proto_rawDesc = nil
	file_log_pass_proto_goTypes = nil
	file_log_pass_proto_depIdxs = nil
}
